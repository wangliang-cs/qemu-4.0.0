# useful link

https://nickdesaulniers.github.io/blog/2018/10/24/booting-a-custom-linux-kernel-in-qemu-and-debugging-it-with-gdb/

# run linux kernel image inside qemu and enable gdb

Create ramdisk.img with sudo mkinitramfs -o ramdisk.img
bzImage from linux-5.x/arch/x86_64/boot/bzImage
vmlinux from linux-5.x/

$./x86_64-softmmu/qemu-system-x86_64 \
	-kernel ./bzImage \
	-nographic \
	-append "console=ttyS0 nokaslr" \
	-initrd ./ramdisk.img \
	-m 512 \
	-s -S 

enable GDB debug -s and pause on init -S


# attach GDB to qemu

$gdb ./vmlinux
(gdb)target remote :1234
(gdb)hbreak start_kernel
(gdb)c



